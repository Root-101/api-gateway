plugins {
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'dev.root101'

version = '4.0.1'

repositories {
    jcenter()
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

dependencies {
    //base api-gateway dependency
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway:4.1.5'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //DB
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.postgresql:r2dbc-postgresql:1.0.7.RELEASE'

    //lombok: autogenerate getters, setters....
    implementation 'org.projectlombok:lombok:1.18.36'
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    //custom exceptions, validations & more
    implementation 'dev.root101.commons:commons:5.4.2.RELEASE.20250501'

    //flyway
    implementation 'org.postgresql:postgresql:42.7.4'
    implementation 'org.flywaydb:flyway-core:11.0.1'
    implementation 'org.flywaydb:flyway-database-postgresql:11.0.1'

    //tests
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.testcontainers:postgresql:1.20.4'
    implementation 'org.testcontainers:junit-jupiter:1.20.4'
    implementation 'io.projectreactor:reactor-test:3.7.0'
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'dev.root101.api_gateway.App'
}

graalvmNative {
    binaries {
        main {
            imageName = 'graalvm'
            mainClass = 'dev.root101.api_gateway.App'
        }
    }
}